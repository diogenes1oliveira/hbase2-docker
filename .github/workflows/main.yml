name: main
on:
  push:
    paths-ignore:
      - "**.md"
      - LICENSE
      - docker-compose.yml
  pull_request:
    paths-ignore:
      - "**.md"
      - LICENSE
      - docker-compose.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Freezes the build environment variables
        run: |
          set -e
          export BUILD_DATE="$( date -u '+%Y-%m-%dT:%H:%M:%S.%NZ' )"
          make -s build/info | tee -a $GITHUB_ENV

      - name: Lint scripts and Dockerfile
        run: make lint

      - name: Build the Docker image
        run: make build

      - name: Run tests
        run: make test

      # based on https://bjansen.github.io/java/2021/02/03/deploying-to-maven-central-using-github-actions.html

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 8.0.362+9
          distribution: adopt

      - name: Replace the default image version
        run: |
          set -e
          sed -i "s/:latest/:$IMAGE_TAG/g" ./src/main/resources/hbase2-docker.properties
          grep hbase2-docker.image ./src/main/resources/hbase2-docker.properties | sed 's/^/> /g'

      - name: Install and run tests
        run: mvn -B install

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Fail if not stable
        if: env.BUILD_IS_STABLE != 'true'
        run: "false"

      - name: Create Git tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.BUILD_VERSION }}
          tag_exists_error: true
          message: "release ${{ env.BUILD_VERSION }}"

      - name: Login to Docker Hub
        if: env.BUILD_IS_STABLE == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: make push && make push BUILD_VERSION=latest

      - name: Set up JDK 1.8 with Maven Central
        uses: actions/setup-java@v3
        with:
          java-version: 8.0.362+9
          distribution: adopt
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Publish to Apache Maven Central
        run: mvn --batch-mode -DskipTests -DautoReleaseAfterClose=true -Dgpg.passphrase=${{ secrets.MAVEN_GPG_PASSPHRASE }} -Pdeploy deploy
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
