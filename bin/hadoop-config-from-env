#!/usr/bin/env bash

SCRIPT="${BASH_SOURCE[0]:-$0}"

set -euo pipefail

usage() {
    cat <<eof
Generates a hadoop configuration file based on the environment variables

Usage:
    $SCRIPT PREFIX [ FORMAT ]

Options:
    PREFIX  only consider variables starting with this value
    FORMAT  '.xml' (default) or '.properties'

This script maps environment variables with the prefix HBASE_CONF_ by removing
the prefix, transforming to lowercase and replacing underscores by dots or dashes:

<!-- PREFIX_SINGLE_UNDERSCORE_IS_DOT=value -->
<!-- PREFIX_DOUBLE__UNDERSCORE__IS__DASH=value -->
<!-- PREFIX_TRIPLE___UNDERSCORE____ESCAPES=value -->

.xml:

<property>
    <name>single.underscore.is.dot</name>
    <value>value</value>
</property>
<property>
    <name>double-underscore-is-dash</name>
    <value>value</value>
</property>
<property>
    <name>tripleUnderscore_escapes</name>
    <value>value</value>
</property>

.properties:

single.underscore.is.dot=value
double-underscore-is-dash=value
tripleUnderscore_escapes=value

eof
}

PREFIX=
FORMAT=.xml

main() {
    print_header

    while IFS=$'\n' read -r line; do
        env_name="${line%%=*}"
        prop_name="${line#*=}"

        print_prop "$prop_name" "${!env_name}"

    done < <( env_to_prop_names )

    print_footer
}

print_header() {
    case "$FORMAT" in
    .xml)
        echo '<?xml version="1.0"?>'
        echo '<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>'
        echo "<!-- generated from environment variables $PREFIX* -->"
        echo '<configuration>'
        ;;
    .properties)
        echo "# generated from environment variables $PREFIX*"
        ;;
    esac
}

print_prop() {
    local prop_name="$1"
    local value="$2"

    case "$FORMAT" in
    .xml)
        echo "<property>"
        echo "    <name>$prop_name</name>"
        echo "    <value>$value</value>"
        echo "</property>"
        ;;
    .properties)
        echo "$prop_name=$value"
        ;;
    esac

}

print_footer() {
    case "$FORMAT" in
    .xml)
        echo '</configuration>'
        ;;
    esac
}

env_to_prop_names() {
    awk -v prefix="$PREFIX" '
        function toprop(name)
        {
            gsub("__", "-", name)
            gsub("_", ".", name)
            return tolower(name)
        }
        BEGIN{
            for(env_name in ENVIRON) {
                i = index(env_name, prefix)
                if(i != 1) continue
                rest = substr(env_name, length(prefix) + 1)

                split(rest, parts, "___")
                result = toprop(parts[1])

                for(i = 2; i <= length(parts); i++) {
                    result = result substr(parts[i], 1, 1) toprop(substr(parts[i], 2))
                }

                print env_name "=" result
            }
        }
    '
}

for arg in "$@"; do
    case "$arg" in
    -h | --help )
        usage && exit 0 ;;
    esac
done

PREFIX="${1:-}"
FORMAT="${2:-.xml}"
ENV_PATTERN="^$PREFIX[A-Z0-9+]+$"

if [ -z "$PREFIX" ]; then
    echo >&2 "ERROR: no environment prefix specified"
    exit 1
fi

main
