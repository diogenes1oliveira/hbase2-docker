#!/usr/bin/env bash

set -uo pipefail

OUTPUTS=''
EXIT_CODE=0

main() {
    if [ "${HBASE_HEALTHCHECK_ENABLED:-}" != 'true' ]; then
        status_up 'default' 'health check is disabled'
    else
        check_port_mappings
        check_hbase_status
    fi

    printf '%s' "$OUTPUTS"
    exit "$EXIT_CODE"
}

check_hbase_status() {
    output="$(echo 'status' | "$HBASE_HOME/bin/hbase" shell -n 2>&1)"
    exit_code="$?"

    if [ "$exit_code" -ne 0 ]; then
        status_down 'check_hbase_status' "$output"
    elif ! grep -q '0 dead' <<<"$output"; then
        status_down 'check_hbase_status' "$output"
    else
        status_up 'check_hbase_status' "$output"
    fi
}

check_port_mappings() {
    if [ -z "${HBASE_PORT_MAPPINGS:-}" ]; then
        status_up 'check_port_mappings' 'no port mappings'
        return
    fi

    output="$(tcp-map-ports --check "$HBASE_PORT_MAPPINGS" 2>&1)"
    exit_code="$?"

    if [ "$exit_code" -ne 0 ]; then
        status_down 'check_port_mappings' "$output"
    else
        status_up 'check_port_mappings' "$output"
    fi
}

output_add() {
    name="$1"
    output="${2:-}"

    OUTPUTS="${OUTPUTS}
output of $name:
$(awk 'BEGIN{RS=""}{gsub(/^[\r\n]+|[\r\n]+$/,""); print}' <<<"$output" | sed 's/^/    /g')
"

}

status_up() {
    name="$1"
    output="${2:-}"

    output_add "$name" "$output"
    printf '%s\n' "$name: UP"
}

status_down() {
    name="$1"
    output="${2:-}"

    output_add "$name" "$output"
    printf '%s\n' "$name: DOWN"
    EXIT_CODE=1
}

main
